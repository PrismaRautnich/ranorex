///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace G4_TEST_POST_RILASCIO._02__Ispezione
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NuovaIspezioneGenerica recording.
    /// </summary>
    [TestModule("9e13677e-7374-42fb-a36d-ce1f0f0d7f16", ModuleType.Recording, 1)]
    public partial class NuovaIspezioneGenerica : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::G4_TEST_POST_RILASCIO.G4_TEST_POST_RILASCIORepository repository.
        /// </summary>
        public static global::G4_TEST_POST_RILASCIO.G4_TEST_POST_RILASCIORepository repo = global::G4_TEST_POST_RILASCIO.G4_TEST_POST_RILASCIORepository.Instance;

        static NuovaIspezioneGenerica instance = new NuovaIspezioneGenerica();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NuovaIspezioneGenerica()
        {
            Targa = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NuovaIspezioneGenerica Instance
        {
            get { return instance; }
        }

#region Variables

        string _Targa;

        /// <summary>
        /// Gets or sets the value of variable Targa.
        /// </summary>
        [TestVariable("de17e675-1f62-4aed-8c28-f0342b03e715")]
        public string Targa
        {
            get { return _Targa; }
            set { _Targa = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "User", "Targa da inserire:", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "User", Targa, new RecordItemIndex(1));
            
            // Inserimento TARGA
            Report.Log(ReportLevel.Info, "Mouse", "Inserimento TARGA\r\nMouse Left Click item 'ApplicationUnderTest.DatiRevisione.Ispezione_TARGA' at 64;11.", repo.ApplicationUnderTest.DatiRevisione.Ispezione_TARGAInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.DatiRevisione.Ispezione_TARGA.Click("64;11");
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Targa'.", new RecordItemIndex(3));
            Keyboard.Press(Targa);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DatiRevisione.Ispezione_KILOMETRI' at 103;16.", repo.ApplicationUnderTest.DatiRevisione.Ispezione_KILOMETRIInfo, new RecordItemIndex(4));
            repo.ApplicationUnderTest.DatiRevisione.Ispezione_KILOMETRI.Click("103;16");
            
            // Inserimento KILOMETRI
            Report.Log(ReportLevel.Info, "Keyboard", "Inserimento KILOMETRI\r\nKey sequence '{NumPad1}{NumPad5}{NumPad0}{NumPad0}{NumPad0}{NumPad0}'.", new RecordItemIndex(5));
            Keyboard.Press("{NumPad1}{NumPad5}{NumPad0}{NumPad0}{NumPad0}{NumPad0}");
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DatiRevisione.BtnProprietario' at Center.", repo.ApplicationUnderTest.DatiRevisione.BtnProprietarioInfo, new RecordItemIndex(6));
            repo.ApplicationUnderTest.DatiRevisione.BtnProprietario.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DatiRevisione.BtnAccettazione' at Center.", repo.ApplicationUnderTest.DatiRevisione.BtnAccettazioneInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.DatiRevisione.BtnAccettazione.Click();
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DatiRevisione.Ispezione_SalvaAccettazione' at Center.", repo.ApplicationUnderTest.DatiRevisione.Ispezione_SalvaAccettazioneInfo, new RecordItemIndex(8));
            repo.ApplicationUnderTest.DatiRevisione.Ispezione_SalvaAccettazione.Click();
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5m to exist. Associated repository item: 'ApplicationUnderTest.DatiRevisione.Ispezione_AccettazioneEffettuata'", repo.ApplicationUnderTest.DatiRevisione.Ispezione_AccettazioneEffettuataInfo, new ActionTimeout(300000), new RecordItemIndex(9));
            repo.ApplicationUnderTest.DatiRevisione.Ispezione_AccettazioneEffettuataInfo.WaitForExists(300000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.DomandaRevisione.Ispezione_ApriDomandaRevisione' at Center.", repo.ApplicationUnderTest.DomandaRevisione.Ispezione_ApriDomandaRevisioneInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.DomandaRevisione.Ispezione_ApriDomandaRevisione.Click();
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.RootGrid.Ispezione_NuovoInserimento' at Center.", repo.ApplicationUnderTest.RootGrid.Ispezione_NuovoInserimentoInfo, new RecordItemIndex(11));
            //repo.ApplicationUnderTest.RootGrid.Ispezione_NuovoInserimento.Click();
            
            //Report.Log(ReportLevel.Info, "Wait", "Waiting 2m to exist. Associated repository item: 'ApplicationUnderTest.RootGrid.msgbx_AnnullamentoModifiche'", repo.ApplicationUnderTest.RootGrid.msgbx_AnnullamentoModificheInfo, new ActionTimeout(120000), new RecordItemIndex(12));
            //repo.ApplicationUnderTest.RootGrid.msgbx_AnnullamentoModificheInfo.WaitForExists(120000);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.RootGrid.msgbx_AnnullamentoModifche_yes' at Center.", repo.ApplicationUnderTest.RootGrid.msgbx_AnnullamentoModifche_yesInfo, new RecordItemIndex(13));
            //repo.ApplicationUnderTest.RootGrid.msgbx_AnnullamentoModifche_yes.Click();
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
